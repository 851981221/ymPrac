#sercer settings
server:
    port: 8888

#management settings
management:
    port: 9001
    address: 127.0.0.1

#TOMCAT
tomcat:
  maxConnections: 1000
  maxThreads: 1000    #同时响应客户请求的最大数目
  minSpareThreads: 200    #初始化时创建的线程数
  maxSpareThreads: 200    #一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程
  acceptCount: 300     #处理队列中的请求数
  connectionTimeout: 30000  #等待超时的时间数（以毫秒为单位）
  processorCache: 500

# DATASOURCE
jdbc:
    url: jdbc:mysql://${db.host}:${db.port}/${db.name}?zeroDateTimeBehavior=convertToNull&useUnicode=yes&characterEncoding=UTF8
    username: ${db.user}
    password: ${db.pwd}
    driverClassName: com.mysql.jdbc.Driver
    initialSize: 100
    maxActive: 200
    minIdle: 50
    maxWait: 30
    validationQuery: select 1
    testOnBorrow: false
    testOnReturn: false
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 25200000
    removeAbandoned: true
    removeAbandonedTimeout: 1800
    logAbandoned: true
    filters: mergeStat
    poolPreparedStatements: false


# SPRING PROFILES
spring:
    # HTTP ENCODING
    http:
        encoding.charset: UTF-8
        encoding.enable: true
        encoding.force: true
    profiles:
        active: dev

# LOGGING
logging:
    config: logback.xml

httpClient:
    maxConn: 500
    maxPerRout: 200
    connectTimeout: 3000
    connectionRequestTimeout: 1000
    socketTimeout: 3000
    liveTokeepAlived: 30
    perfSlowTime: 500

redis:
    host: ${redis.host}
    port: ${redis.port}
    databaseNum: ${redis.databaseNum}
    maxTotal: 800
    maxIdle: 200
    minIdle: 200
    maxWaitMillis: 1000
    timeBetweenEvictionRunsMillis: 180000  #30分钟跑一次idle object eviction线程
    lifo: false  #解决java.net.SocketTimeoutException: connect timed out

sso:
  redis:
      host: ${redis.host}
      port: ${redis.port}
      databaseNum: 3
      max: 200
      min: 200
      idle: 100
      expire: 2592000